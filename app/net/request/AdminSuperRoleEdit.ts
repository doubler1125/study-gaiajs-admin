/**
 * generated by template generator. don't modify it.
 *
 */

import { Context } from 'egg';
import GaiaRequest from 'study-gaiajs/app/lib/request';


/**
 * path: /admin/super/role
 *
 * ç¼–è¾‘è§’è‰²
 */
export default class AdminSuperRoleEditRequest extends GaiaRequest {
  static accessorName = 'AdminSuperRoleEdit';
  static path = '/admin/super/role';
  static method = 'PUT';

  /**
   *
   * @type string
   * @memberof AdminSuperRoleEdit
   */
  name: string;

  /**
   *
   * @type any
   * @memberof AdminSuperRoleEdit
   */
  role: any;

  // tslint:disable-next-line: max-func-body-length
  constructor(params: any, ctx: Context) {
    super(params, ctx);
    const data: {
      [K: string]: any;
    } = {};

    
    if (ctx.request.body.hasOwnProperty('name')) {
      data.name = ctx.request.body.name;
    }
    
    if (ctx.request.body.hasOwnProperty('role')) {
      data.role = ctx.request.body.role;
    }
    

    const rules = {
      name: {
        type: 'string', required: true, },
      role: {
        type: 'object', required: true, },

    };

    try {
      ctx.validate(rules, data);
    } catch (err) {
      ctx.service.error.throwRequestValidateError(err);
    }

    Object.defineProperties(this, {
      name: { value: data.name },
      role: { value: data.role },
    });

    Object.defineProperty(this, 'toJSON', {
      value: () => {
        return data;
      },
    });
  }
}
